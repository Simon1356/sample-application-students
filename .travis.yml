language: java
jdk: oraclejdk8
services:
- docker
before_install:
- sudo service mysql stop
- docker pull takimatraining/devops-training-db
- docker run -d -p 127.0.0.1:3306:3306 takimatraining/devops-training-db
script:
- |
  mvn clean install sonar:sonar \
  -Dsonar.projectKey=Simon1356_sample-application-students \
  -Dsonar.organization=simon1356-github \
  -Dsonar.host.url=https://sonarcloud.io \
  -Dsonar.login=66f5d5cfd8494e36fb5dd30432008f5d97533062
cache:
  directories:
  - "$HOME/.m2/repository"
env:
  global:
  - secure: "RBQMbyZxErykb5VavWyGTQGelAMdSoTkN5AQvdsBTSWqnvG3jLO/HqPHnEp/Bg+ChkpzApzB/4OhEKDvRtJS/b0Esz+rwmQrDJJF4ArJ/+AhJNDu4PC1b/o1pLSGbqXaC8s9o6bn24wmZlHs1uL0TpLvkGrNWawdT689C8gbdlvYeez+tvJ+khW6V/B4AmNHgfZRCzis+eQt270pAMNQ17SkU9ZslQDphrrGo10XXuudRBPWsz6GHo4kU3mNJovEl41mPlh46Ee8C2Q29245On03Jjyv3IIIFm33zbM0fL62lXDUOsqf21OC38F46c5x/O9Yb3cdKxlWVN63ylngI7BVfX7+eOrJ5m6a8s9/LJ9fHxEIDM87zCiDjA4H/whh+QSN0JVPL/RxEwFJ7SrL/J3HXExFiXjFWHVHJIBT39du5Mr8ESuLmXa+v1L9jDRXKC4mHkT4xdzzBymC9rdev5lg6yUDGdTPZ9/9rrCPRxjEgwsi8sey6eZUyj+Zi0+6AeSTVK3l0JGMxr05rCw4XEFFom3oU6DBVRscvwUj22LprgI4MsL3TQxO8P1U0xGfBxoVGSCZc8TS0riPHakKlb7H+S8OyyLIwGZzZvJji0AkI6pAe4+SbNvEmkGpvxsOT45jWU0YkBWt4dmaC/27EZbb5gHpdauMAlGYGvmIDEQ="
  - secure: "Y6pypGeHC/702HatJZkIjIjdT7nhmG99sfIoFnb08V3us/lMHtntIN3nxfHrbvDaUFxEDv+jRLAvmF8lQowIwgCTfzMvmqD/v5Q5ijowb0H9tJ8te3uoO5sNmRZnYmuhdh7K17Sq/c1k0mtTZ1Q/+C5TZJ+95kpYL4Hk+H8lBk/VVIRCagDnpLQW8Xwjes/djTRyS2WpgB7SFBL03LkJixJVZXlAVpfLv8RnJElD++32b19wTXWbg4SDGN6Ab16LrCISCQ8P8vdzpVho5O3aKfXPP+miPy+NBM4t4/qzD8XyrDmZwugYZ8SPD14fKI3qAe/uDwaj/a1z4tIgt7d7JpUxQGf3oAE+3dHDbdSWxXHtMGHoUW/UZiF00ZtFhEU8s4lLwx6Hcvz1UclQbY5T0U7iFIRXNofkyNklEjAlRE+3Qfi/pg0ijSfprYQfNg0PSdU0aeZhtR/gwhA/+r9Npsgm+ZH5ygD/2WKgz0DZ+fq1clsEfr3XBAq0WgElsIe/EsXhifffxOwfIN2bIMJyL5j2o75+OuXkl0n7Duqh6u1eAuvQAYbk0meo48pyZVEW9usxzjoqB526Iw9YVhTW9KQZYvplFktY6uN/6j4mLtf6SUBeYQqG9phzPmWJF7KuYcNdgDEM4/801KeHjO8U4EnOBdkub/RtRUuLWtJx/Cw="
  - secure: "hjRFxpZBo2nVXpQ+wPLLXeGZyzisLinx1pqQ/lFWtlV+fUhZBuNwK1sTSrgJ63Vm8OuQ1X2Cjqry9khUi63l65/2PksvLrub78mSB8XCQcSVVezUxh9nWDBgEEorn2dEwf3bAWzON6PN/kOeWoG+0tMa6Zc5qqNQlF8iuO9BkttRkdIsCEiv54yBAKYTECNEPKibV2R2F+6PUV0zgNfzYnRc9QtbWLBNHrp9swvy2ovgIJkVQMgTWfOz1vvMB2tj9uc5oqTf3ySgBLKxbPkk8WMd4X7iibDYPbRUkLl6VhSUu1O85280J/j8vj7y9N1/aLHNY5oB4t2fVjgkqmXV/0K1HI0MH2t5VjqBR2xu7XMLi3dOVbQHCoD+eEQHZkxyP4tVO2GQc4jlR2/YYceD30pjfng1beHQSIfIu7BrpgNBTKV1bu4w3n68suSE7bEpcCrhgJDF6mTDJCG/WiUlQSxALYgfKKQ6AdH3NgZdin1CJoPmfVnq3wuPcYZkiRTi5R0Sc05drgqO6mLutzj7aylMyDCeNFyBYIxfCNyqqjXaMIL1D9aTSrIypzGSMrz2n2/9cWDoCm+AZujuzV77icqg7I/8rcXlZnh3JrD7AE4nr4YLHWLrtWruo0Nlx81Ai0qGi8xlpFHWUnzFdmoLpuUyW2e77ZG7JglA+o/0yLQ="

# Build an image containing the .jar and push it to the Docker Hub
script:

  # Login to Docker hub
  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  # Tag text according to the branch
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  # Image name
  - export IMAGE_NAME=simon1356/sample-application
  # Build the image (see Dockerfile) and tag it with the commit ID
  - docker build -t $IMAGE_NAME:$TRAVIS_COMMIT .
  # Retag the image with the previously choosen tag
  - docker tag $IMAGE_NAME:$TRAVIS_COMMIT $IMAGE_NAME:$TAG
  # Push the tagged image to Docker Hub
  - docker push $IMAGE_NAME:$TAG

before_install:

# Prepare deploy
  - openssl aes-256-cbc -K $encrypted_xxxxxxx_key -iv $encrypted_xxxxxxxxxxx_iv
    -in travis_deploy_rsa.enc -out /tmp/travis_deploy_rsa -d  # Généré par travis encrypt-file
  - chmod 600 /tmp/travis_deploy_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add /tmp/travis_deploy_rsa
  - echo -e "Host $SERVER_HOST\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

...

# Deploy updated container over ssh
deploy:
  provider: script
  script: ssh -i /tmp/travis_deploy_rsa $DEPLOY_USER@$SERVER_HOST "sudo docker pull $IMAGE_NAME:$TAG && sudo docker rm -f app || true && sudo docker run -d --network net -p 80:8080 --name app $IMAGE_NAME:$TAG"
  on:
    branch: master